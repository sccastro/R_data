rtplot1 <- ggplot(datart, aes(x = as.factor(condition),
fill = totalerrors,y=rt)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt-ci, ymax=rt+ci)) +
xlab("Condition")
rtplot1
datart
str(clean)
glimpse(clean)
clean$totalerrors
source("https://raw.githubusercontent.com/talgalili/R-code-snippets/master/boxplot.with.outlier.label.r") # Load the function
set.seed(492)
y <- rnorm(2000)
y
plot(y)
hist(y)
x2 <- sample(letters[1:2], 2000,T)
x1 <- sample(letters[1:2], 2000,T)
hist(x1)
class(x1)
x1
x2
lab_y <- sample(letters[1:4], 2000,T)
lab_y
boxplot.with.outlier.label(y~x2*x1, lab_y)
install.packages("TeachingDemos")
require(TeachingDemos)
set.seed(492)
y <- rnorm(2000)
x1 <- sample(letters[1:2], 2000,T)
x2 <- sample(letters[1:2], 2000,T)
lab_y <- sample(letters[1:4], 2000,T)
# plot a boxplot with interactions:
boxplot.with.outlier.label(y~x2*x1, lab_y)
head(clean)
head(clean)
clean.mean
clean.mean <- clean %>%
group_by(subid,condition, r1g0) %>%
dplyr::summarise(perc_error = mean(totalerrors)*100)
clean.mean
boxplot.with.outlier.label(perc_error~condition*subid, as.data.frame(clean.mean))
clean.mean <- clean %>%
group_by(subid,condition, r1g0) %>%
dplyr::summarise(perc_error = mean(totalerrors)*100)
boxplot.with.outlier.label(perc_error~condition*subid, as.data.frame(clean.mean))
clean.mean
boxplot.with.outlier.label(perc_error~condition*subid, as.data.frame(clean.mean))
boxplot.with.outlier.label(clean.mean$perc_error~clean.mean$condition*clean.mean$subid)
boxplot(perc_error, subid, data = clean.mean)
clean.mean <- clean %>%
group_by(subid,condition, r1g0) %>%
dplyr::summarise(perc_error = mean(totalerrors)*100)
boxplot(perc_error, subid, data = clean.mean)
boxplot(data = clean.mean, perc_error, subid)
boxplot(clean.mean$perc_error, clean.mean$subid)
clean.mean
boxplot.with.outlier.label(clean.mean$perc_error~clean.mean$condition*clean.mean$subid)
hist(count(clean$totalerrors))
hist(count(as.data.frame(clean$totalerrors)))
hist(count(as.data.frame(numeric(clean$totalerrors))))
hist(clean.mean$perc_error)
xyplot
str(clean.data)
hist(clean.mean$perc_error, breaks = 30)
hist(clean.mean$perc_error, breaks = 50)
hist(clean.mean$perc_error, breaks = 100)
hist(clean.mean$perc_error, breaks = 100, density = TRUE)
hist(clean.mean$perc_error, breaks = 100, labels = clean.mean$subid)
hist(clean.mean$perc_error, breaks = 100, labels = TRUE)
data.frame(clean.mean)
hierror <- clean.mean %>%
filter(subid == c("002","003","005","008","014","015","021","023","024"))
notwanted <- c("002","003","005","008","014","015","021","023","024")
hierror <- clean.mean %>%
filter(!as.integer(subid) %in% nonWantedLevels))
hierror <- clean.mean %>%
filter(!as.integer(subid) %in% nonWantedLevels)
hierror <- clean.mean %>%
filter(!as.integer(subid) %in% nonwanted)
notwanted <- c("002","003","005","008","014","015","021","023","024")
hierror <- clean.mean %>%
filter(!as.integer(subid) %in% nonwanted)
hierror <- clean.mean %>%
filter(!as.integer(subid) %in% notwanted)
hierror
as.integer(clean.mean$subid)
notwanted <- c(2,3,5,8,14,15,21,23,24)
hierror <- clean.mean %>%
filter(!as.integer(subid) %in% notwanted)
hierror
subjectsremoved <- clean.mean %>%
filter(!as.integer(subid) %in% notwanted)
hist(clean.mean$perc_error, breaks = 100, labels = TRUE)
hist(subjectsremoved$perc_error, breaks = 100, labels = TRUE)
subjectsremoved$perc_error
data.frame(subjectsremoved)
notwanted <- c(2,3,5,8,14,15,21,23,24)
subjectsremoved <- clean.mean %>%
filter(!as.integer(subid) %in% notwanted)
data.frame(subjectsremoved)
notwanted <- c(2,3,5,8,14,15,21,23,24)
!as.integer(clean.mean$subid)
as.integer(clean.mean$subid)
data.frame(clean.mean)
levels(clean.mean$subid)
clean.mean$subid[19]
data.frame(subjectsremoved)
notwanted <- c(2,3,5,8,14,15,20,22,23)
subjectsremoved <- clean.mean %>%
filter(!as.integer(subid) %in% notwanted)
hist(subjectsremoved$perc_error, breaks = 100, labels = TRUE)
boxplot.with.outlier.label(clean.mean$perc_error~clean.mean$condition*clean.mean$subid)
boxplot.with.outlier.label(subjectsremoved$perc_error~clean.mean$condition*clean.mean$subid)
boxplot.with.outlier.label(subjectsremoved$perc_error~subjectsremoved$condition*subjectsremoved$subid)
clean.mean
clean
boxplot.with.outlier.label(clean$rt~clean$condition*clean$subid)
boxplot.with.outlier.label(clean$rt~clean$condition*clean$r1g0)
hist(subjectsremoved$perc_error, breaks = 100, labels = TRUE)
hist(clean$perc_error, breaks = 100, labels = TRUE)
hist(clean$totalerrors, breaks = 100, labels = TRUE)
length(subjectsremoved$subid)
levels(subjectsremoved$subid)
length(levels(subjectsremoved$subid))
levels(subjectsremoved$subid) <- droplevels(subjectsremoved$subid)
length(levels(subjectsremoved$subid))
subjectsremoved <- clean %>%
filter(!as.integer(subid) %in% notwanted)
levels(subjectsremoved$subid) <- droplevels(subjectsremoved$subid)
length(subjectsremoved)
length(subjectsremoved$subid)
hist(subjectsremoved$subid)
hist(subjectsremoved$rt)
hist(subjectsremoved$rt, xlim = c(0,2000))
hist(subjectsremoved$rt, xlim = c(0,2000), breaks = 100)
hist(subjectsremoved$rt, xlim = c(0,2000), breaks = 500)
hist(subjectsremoved$rt, xlim = c(150,2000), breaks = 500)
hist(subjectsremoved$rt, xlim = c(150,2000), ylim = (0,2000) breaks = 1000)
hist(subjectsremoved$rt, xlim = c(150,2000), ylim = c(0,200) breaks = 1000)
hist(subjectsremoved$rt, xlim = c(150,2000), ylim = c(0,200), breaks = 1000)
hist(subjectsremoved$rt, xlim = c(150,2000), ylim = c(0,50), breaks = 1000, density = TRUE)
hist(subjectsremoved$rt, xlim = c(150,2000), ylim = c(0,50), breaks = 1000)
hist(subjectsremoved$rt~subjectsremoved$condition, xlim = c(150,2000), ylim = c(0,50), breaks = 1000)
hist(formula = subjectsremoved$rt~subjectsremoved$condition, xlim = c(150,2000), ylim = c(0,50), breaks = 1000)
hist(subjectsremoved$rt, xlim = c(150,2000), ylim = c(0,50), breaks = 1000)
ggplot(data = subjectsremoved, formula = rt~condition, xlim = c(150,2000), ylim = c(0,50), breaks = 1000)
ggplot(data = subjectsremoved, formula = rt~condition, aes(xlim = c(150,2000), ylim = c(0,50), breaks = 1000)) +
geom_histogram()
ggplot(data = subjectsremoved, formula = rt~condition) +
geom_histogram()
ggplot(data = subjectsremoved, formula = rt~condition) +
geom_histogram(stat = "density")
ggplot(data = subjectsremoved, formula = rt~condition) +
geom_histogram(stat = "density", bins = 500,binwidth = .9)
ggplot(data = subjectsremoved, formula = rt~condition) +
geom_histogram(stat = "density", bins = 500,binwidth = .9,pad = 1)
qplot(subjectsremoved$rt, geom = "histogram")
ggplot(subjectsremoved, aes(subjectsremoved$rt)) + geom_histogram()
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) + geom_density(alpha=.3)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition), xlim(150,2000)) + geom_density(alpha=.3)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition, r1g0)) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition, r1g0))) +
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition, r1g0))) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition), colour = r1g0)) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition))) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition))) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition)))
+
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = c(condition))) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 1)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 2)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 10)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 100)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 11)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 12)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(palette = 13)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(type = "div",palette = 13)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 1)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.3) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 2)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 2)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 3)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 4)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 5)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 6)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 7)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 7)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 8)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 9)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 10)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(150,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=subjectsremoved, aes(xintercept=mean(rt),  colour=condition),
linetype="dashed", size=1)
ggplot(subjectsremoved, aes(subjectsremoved$rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=subjectsremoved, aes(xintercept=mean(rt),  colour=condition),
linetype="dashed", size=1)
clean
datart
clean.rt <- clean %>%
filter(rt >= 150 & rt <= 2000)
length(clean.rt$subid)
clean$pressCount
clean$isPractice
clean <- clean.data %>%
filter(isPractice == "no", pressCount == 1 | pressCount == 0) %>%
group_by(subid,condition,r1g0) %>%
dplyr::mutate(falsealarm = ifelse(pressCount == 1 & r1g0 == "r", 1,0)) %>%
dplyr::mutate(miss = ifelse(pressCount == 0 & r1g0 == "g", 1,0)) %>%
dplyr::mutate(totalerrors = miss + falsealarm)
clean$pressCount
class(clean.data$pressCount)
clean <- clean.data %>%
filter(isPractice == "no", pressCount == 1 | pressCount == 0) %>%
group_by(subid,condition,r1g0) %>%
dplyr::mutate(falsealarm = ifelse(pressCount == 1 & r1g0 == "r", 1,0)) %>%
dplyr::mutate(miss = ifelse(pressCount == 0 & r1g0 == "g", 1,0)) %>%
dplyr::mutate(totalerrors = miss + falsealarm)
clean$pressCount
class(clean$pressCount)
summary(clean$falsealarm)
summary(clean$totalerrors)
clean$totalerrors
clean.mean <- clean %>%
group_by(subid,condition, r1g0) %>%
dplyr::summarise(perc_error = mean(totalerrors)*100)
clean.mean
data.frame(clean.mean)
clean.rt <- clean %>%
filter(rt >= 150 & rt <= 2000)
clean.rt
summary(clean.rt)
clean.rt <- clean %>%
select(subid,condition,r1g0,rt,falsealarm) %>%
filter(rt >= 150 & rt <= 2000)
clean.rt
summary(clean.rt$r1g0)
summary(clean.rt$falsealarm)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=data.frame(clean.rt), aes(xintercept=mean(rt),  colour=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=data.frame(clean.rt), aes(xintercept=median(rt),  colour=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=data.frame(clean.rt), aes(xintercept=median(rt),  colour=condition, alpha = .2),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=data.frame(clean.rt),
aes(xintercept=median(rt), colour=condition), position = "dodge",
linetype="dashed", size=1)
geom_vline(data=data.frame(clean.rt),
aes(xintercept=median(rt), colour=condition), position_dodge(),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(data=data.frame(clean.rt),
aes(xintercept=median(rt), colour=condition, position = "dodge"),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(aes(xintercept=median(rt), colour=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(aes(xintercept=median(rt), fill=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + scale_fill_brewer(type = "div", palette = 9) +
geom_vline(aes(xintercept=median(rt), color=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) + geom_line(stat="vline", xintercept="mean")
clean.rt
clean.rt %>%
group_by(condition, r1g0) %>%
dplyr::summarise(rt.med = median(rt))
medlines <- clean.rt %>%
group_by(condition, r1g0) %>%
dplyr::summarise(rt.med = median(rt))
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = medlines, xintercept=rt, color=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = data.frame(medlines), xintercept=rt, color=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = data.frame(medlines), xintercept=rt.mean, color=condition),
linetype="dashed", size=1)
medlines
ggplot(data.frame(clean.rt), aes(rt, fill = condition, colour = r1g0)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = data.frame(medlines), xintercept=rt.med, color=condition),
linetype="dashed", size=1)
medlines
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = data.frame(medlines), xintercept=rt.med, color=condition),
linetype="dashed", size=1)
medlines(rt.med)
medlines <- clean.rt %>%
group_by(condition, r1g0) %>%
dplyr::summarise(rt.med = median(rt))
medlines$rt.med
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = data.frame(medlines), xintercept=rt.med, color=condition),
linetype="dashed", size=1)
medlines <- clean.rt %>%
group_by(condition) %>%
dplyr::summarise(rt.med = median(rt))
medlines
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = as.data.frame(medlines), xintercept=rt.med, color=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = as.data.frame(medlines), xintercept=data.frame(medlines$rt.med), color=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(aes(data = as.data.frame(medlines), xintercept=medlines$rt.med, color=condition),
linetype="dashed", size=1)
geom_vline(data = as.data.frame(medlines), aes(xintercept=medlines$rt.med, color=condition),
linetype="dashed", size=1)
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(data = as.data.frame(medlines), aes(xintercept=medlines$rt.med, color=condition),
linetype="dashed", size=1)
clean.rt
datart <- summarySEwithin(clean.rt, measurevar ="rt", withinvars = c("condition","totalerrors"), idvar = "subid")
clean.rt
datart <- summarySEwithin(clean.rt, measurevar ="rt", withinvars = c("condition","falsealarm"), idvar = "subid")
datart
rtplot1 <- ggplot(datart, aes(x = as.factor(condition),
fill = falsealarm,y=rt)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt-ci, ymax=rt+ci)) +
xlab("Condition")
rtplot1
rtplot1 <- ggplot(datart, aes(x = as.factor(condition),
fill = falsealarm,y=rt.norm)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt.norm-ci, ymax=rt.norm+ci)) +
xlab("Condition")
rtplot1
datart
rtplot1 <- ggplot(datart, aes(x = as.factor(condition),
fill = falsealarm,y=rt_norm)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt_norm-ci, ymax=rt_norm+ci)) +
xlab("Condition")
rtplot1
rtplot1 <- ggplot(datart, aes(x = as.factor(falsealarm),
fill = condition,y=rt_norm)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt_norm-ci, ymax=rt_norm+ci)) +
xlab("Condition")
rtplot1
rtplot1 <- ggplot(datart, aes(x = as.factor(falsealarm),
fill = condition,y=rt_norm)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt_norm-ci, ymax=rt_norm+ci)) +
xlab("False Alarm") + scale_x_discrete(labels = c("incorrect","correct"))
rtplot1
rtplot1 <- ggplot(datart, aes(x = as.factor(falsealarm),
fill = condition,y=rt_norm)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt_norm-ci, ymax=rt_norm+ci)) +
xlab("False Alarm") #+ scale_x_discrete(labels = c("incorrect","correct"))
rtplot1
rtplot1 <- ggplot(datart, aes(x = as.factor(falsealarm),
fill = condition,y=rt_norm)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font() + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt_norm-ci, ymax=rt_norm+ci)) +
scale_x_discrete("False Alarm", labels = c("incorrect","correct"))
source("Load_Data.R")
combined.data <- CombineData()
clean.data <- CleanData(combined.data)
# Descriptives ------------------------------------------------------------
str(clean.data)
summaryBy(rt ~ subid + condition + r1g0, data = clean.data)
clean.data %>%
group_by(subid, condition, r1g0) %>%
dplyr::summarise(total.count = n())
# Calculate DV's -----------------------------------------------------
#Create accuracy
clean <- clean.data %>%
filter(isPractice == "no", pressCount == 1 | pressCount == 0) %>%
group_by(subid,condition,r1g0) %>%
dplyr::mutate(falsealarm = ifelse(pressCount == 1 & r1g0 == "r", 1,0)) %>%
dplyr::mutate(miss = ifelse(pressCount == 0 & r1g0 == "g", 1,0)) %>%
dplyr::mutate(totalerrors = miss + falsealarm)
clean.mean <- clean %>%
group_by(subid,condition, r1g0) %>%
dplyr::summarise(perc_error = mean(totalerrors)*100)
clean.rt <- clean %>%
select(subid,condition,r1g0,rt,falsealarm) %>%
filter(rt >= 150 & rt <= 2000)
# Outliers ----------------------------------------------------------------
source("https://raw.githubusercontent.com/talgalili/R-code-snippets/master/boxplot.with.outlier.label.r") # Load the function
boxplot.with.outlier.label(clean$rt~clean$condition*clean$r1g0)
notwanted <- c(2,3,5,8,14,15,20,22,23)
subjectsremoved <- clean %>%
filter(!as.integer(subid) %in% notwanted)
levels(subjectsremoved$subid) <- droplevels(subjectsremoved$subid)
#rthist
medlines <- clean.rt %>%
group_by(condition) %>%
dplyr::summarise(rt.med = median(rt))
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(data = as.data.frame(medlines), aes(xintercept=medlines$rt.med, color=condition),
linetype="dashed", size=1)
# Get some Error Bars -----------------------------------------------------
datac <- summarySEwithin(clean, measurevar ="totalerrors", withinvars = c("condition","r1g0"), idvar = "subid")
datac
datart <- summarySEwithin(clean.rt, measurevar ="rt", withinvars = c("condition","falsealarm"), idvar = "subid")
datart
boxplot.with.outlier.label(clean$rt~clean$condition*clean$r1g0)
clean.rt
boxplot.with.outlier.label(clean.rt$rt~clean$condition*clean$r1g0, label_name = c(letters[1:3]))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0, label_name = c(letters[1:3]))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0, label_name = c(letters[1:3,]))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0, label_name = c(letters[1:6,]))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0, label_name = c(letters[1,]))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0, label_name = c(letters[6,]))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0, label_name = c(letters))
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0)
levels(clean.rt$rt)
levels(clean.rt$condition)
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0,
label_name = "Test")
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0,
label_name = subid)
boxplot.with.outlier.label(clean.rt$rt~clean.rt$condition*clean.rt$r1g0,
label_name = clean.rt$subid)
clean.rt$subid
notwanted <- c(2,3,5,8,14,15,20,22,23)
subjectsremoved <- clean.rt %>%
filter(!as.integer(subid) %in% notwanted)
levels(subjectsremoved$subid) <- droplevels(subjectsremoved$subid)
medlines <- clean.rt %>%
group_by(condition) %>%
dplyr::summarise(rt.med = median(rt))
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(data = as.data.frame(medlines), aes(xintercept=medlines$rt.med, color=condition),
linetype="dashed", size=1)
medlines <- subjectsremoved %>%
group_by(condition) %>%
dplyr::summarise(rt.med = median(rt))
ggplot(data.frame(clean.rt), aes(rt, fill = condition)) +
geom_density(alpha=.8) + xlim(0,2000) +
geom_vline(data = as.data.frame(medlines), aes(xintercept=medlines$rt.med, color=condition),
linetype="dashed", size=1)
str(clean.data)
summaryBy(rt ~ subid + condition + r1g0, data = clean.data)
clean.data %>%
group_by(subid, condition, r1g0) %>%
dplyr::summarise(total.count = n())
clean
