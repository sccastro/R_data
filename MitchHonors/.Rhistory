vis.time %>%
group_by(subid) %>%
summarise(n(), min(tup), max(tup))
rm(list=ls()); par(mfrow = c(1,1))
source("Load_Data.R")
require(gridExtra)
require(lubridate)
require(car)
library(ggrepel)
rm(list = ls())
source("Load_Data.R")
load("CleanData.Rdata")
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(subid != lag(subid),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
origin="1970-01-01", tz="UTC")) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(trial_start,stim_onset, UTC, rt, subid, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(subid != lag(subid),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
origin="1970-01-01", tz="UTC")) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
origin="1970-01-01", tz="UTC")) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
drt.combined$subid[1]
drt.combined.time
seconds(rt/1000)
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1, ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
origin="1970-01-01", tz="UTC"), UTC)) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC"))
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC"))
drt.combined.time
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
options(digits.secs=6)
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
View(vis.time %>%
group_by(subid, block) %>%
summarise(blocklength = length(block),min = min(time), max = max(time)))
vis.time <- vis.combined %>%
filter(condition == "mixed") %>%
arrange(subid) %>%
group_by(subid) %>%
mutate(tup = cumsum(rt1 + rt2)) %>%
mutate(tlow = lag(tup, default = 0)) %>%
mutate(block = cumsum(trial==1)) %>%
select(subid, block, trial, time, targcol:rt2, tlow, tup) %>%
ungroup(subid)
View(vis.time)
View(vis.time)
seconds(10)
drt.combined.time$trial_start[1]
drt.combined.time$trial_start[2] - lag(drt.combined.time$trial_start[1])
drt.combined.time$trial_start[2] - lag(drt.combined.time$trial_start[2])
drt.combined.time$trial_start[2] - drt.combined.time$trial_start[1]
drt.combined.time$trial_start[1:10] - lag(drt.combined.time$trial_start[1:10])
drt.combined.time$trial_start[5] - lag(drt.combined.time$trial_start[5])
drt.combined.time$trial_start[5] - drt.combined.time$trial_start[4]
View(vis.time %>%
group_by(subid,block),
summarise(n()))
View(vis.time %>%
group_by(subid,block),
dplyr::summarise(n()))
View(vis.time %>%
group_by(subid,block),
dplyr::summarise(n())
View(vis.time %>%
group_by(subid,block),
dplyr::summarise(n()))
View(vis.time %>%
group_by(subid,block),
dplyr::summarise(n()))
vis.time %>%
group_by(subid,block),
dplyr::summarise(n())
vis.time %>%
group_by(subid,block) %>%
dplyr::summarise(n())
drt.combined.time$trial_start[2:10] - lag(drt.combined.time$trial_start[2:10])
drt.combined.time$trial_start[2:100] - lag(drt.combined.time$trial_start[2:100])
class(seconds(10))
class(drt.combined.time$trial_start[2] - drt.combined.time$trial_start[1])
difftime(10,2)
difftime(minutes(30) - seconds(10))
as.numeric(drt.combined.time$trial_start - lag(drt.combined.time$trial_start, default = 4), units = "seconds")
as.numeric(drt.combined.time$trial_start - lag(drt.combined.time$trial_start, default = 4), units = "sec")
as.numeric(drt.combined.time$trial_start - lag(drt.combined.time$trial_start, default = 4))
as.numeric(drt.combined.time$trial_start[2] - lag(drt.combined.time$trial_start[1], default = 4))
as.numeric(drt.combined.time$trial_start[2] - lag(drt.combined.time$trial_start[1], default = 4), units = "secs")
as.numeric(drt.combined.time$trial_start[2] - lag(drt.combined.time$trial_start[1], default = 4), units = "auto")
difftime(drt.combined.time$trial_start[2] - drt.combined.time$trial_start[2], default = 4)
difftime(drt.combined.time$trial_start[2] - drt.combined.time$trial_start[2])
drt.combined.time$trial_start[2]
class(drt.combined.time$trial_start[2])
difftime(drt.combined.time$trial_start[2] - drt.combined.time$trial_start[1])
?difftime
difftime(drt.combined.time$trial_start[2], drt.combined.time$trial_start[1])
class(difftime(drt.combined.time$trial_start[2], drt.combined.time$trial_start[1]))
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
mutate(block = cumsum(ifelse(difftime(trial_start, lag(trial_start, default = 4), units = "secs"))))
class(lag(drt.combined.time$trial_start[1], default = 4))
lag(drt.combined.time$trial_start[1], default = 4)
as.numeric(difftime(drt.combined.time$trial_start[1] - lag(drt.combined.time$trial_start[1], default = 4)))
as.numeric(difftime(drt.combined.time$trial_start[1], lag(drt.combined.time$trial_start[1], default = 4)))
as.numeric(difftime(drt.combined.time$trial_start[2], lag(drt.combined.time$trial_start[2], default = 4)))
lag(drt.combined.time$trial_start[2]
)
lag(drt.combined.time$trial_start[2:3])
as.numeric(difftime(drt.combined.time$trial_start[2:3], lag(drt.combined.time$trial_start[2:3], default = 4)))
as.numeric(difftime(drt.combined.time$trial_start[2:3], lag(drt.combined.time$trial_start[2:3], default = 4), units = "secs"))
as.numeric(difftime(drt.combined.time$trial_start[2:3], lag(drt.combined.time$trial_start[2:3], default = 4), units = "secs")) > 4
as.numeric(difftime(drt.combined.time$trial_start[2:3], lag(drt.combined.time$trial_start[2:3], default = 4), units = "secs")) > 5
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
mutate(block = cumsum(
ifelse(
as.numeric(difftime(trial_start,
lag(
trial_start, default = 4),
units = "secs")) > 50, 1,0)))
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
mutate(block = cumsum(
ifelse(
as.numeric(difftime(trial_start,
lag(
trial_start, default = 4),
units = "secs")) > 50, 1,0))) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid,block, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
group_by(subid) %>%
mutate(block = cumsum(
ifelse(
as.numeric(difftime(trial_start,
lag(
trial_start, default = 4),
units = "secs")) > 50, 1,0))) %>%
ungroup(subid) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid,block, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
group_by(subid, condition) %>%
mutate(block = cumsum(
ifelse(
as.numeric(difftime(trial_start,
lag(
trial_start, default = 4),
units = "secs")) > 50, 1,0))) %>%
ungroup(subid, condition) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid,block, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
vis.time %>%
group_by(subid,block) %>%
dplyr::summarise(n())
vis.time %>%
group_by(subid) %>%
dplyr::summarise(unique(block))
vis.time %>%
group_by(subid) %>%
dplyr::summarise(length(block))
vis.time %>%
group_by(subid) %>%
dplyr::summarise(length(unique(block)))
vis.time %>%
group_by(subid) %>%
dplyr::summarise(blocks = length(unique(block))) %>%
filter(blocks != 4)
drt.combined.time <- drt.combined %>%
mutate(subid = as.numeric(as.character(subid), rt = as.numeric(as.character(rt)))) %>%
mutate(UTC = as.POSIXct(UTC/1000, origin="1970-01-01", tz="UTC")) %>%
mutate(trial_start =
as.POSIXct(ifelse(rt != -1,
ifelse(subid != lag(subid, default = 0),
UTC - seconds(5 + rt/1000),
UTC - seconds(rt/1000)),
UTC),
origin="1970-01-01", tz="UTC")) %>%
group_by(subid, condition) %>%
mutate(block = cumsum(
ifelse(
as.numeric(difftime(trial_start,
lag(
trial_start, default = 4),
units = "secs")) > 50, 1,0))) %>%
ungroup(subid, condition) %>%
mutate(stim_onset = UTC - seconds(rt/1000)) %>%
select(subid,block, trial_start,stim_onset, UTC, rt, condition, response) %>%
mutate(condition = recode_factor(condition, "1" = "practice", "2" = "green", "3" = "white", "4" = "mixed")) %>%
filter(condition == "mixed")
drt.combined.time <- as_tibble(drt.combined.time)
View(drt.combined.time)
drt.combined.time %>%
group_by(subid) %>%
dplyr::summarise(blocks = length(unique(block))) %>%
filter(blocks != 4)
rm(list=ls()); par(mfrow = c(1,1))
source("Load_Data.R")
require(tidyverse)
require(gridExtra)
require(lubridate)
require(car)
setwd("~/Documents/R_data/MitchHonors")
rm(list = ls())
source("Load_Data.R")
load("CleanData.Rdata")
myColors <- c("forestgreen","grey50")
names(myColors) <- levels(clean$targcol)
colScale <- scale_colour_manual(name = "targcol",values = myColors)
acc.mean <- cleanac %>%
group_by(condition, targcol) %>%
summarise(perc_corr = mean(corr)*100, n=n())
datac <- summarySEwithin(cleanac, measurevar ="corr", withinvars = c("condition","targcol"), idvar = "subid")
datac$new_c <- c("green.white","mixed","mixed","green.white")
accplot <- ggplot(datac, aes(x = new_c, y=corr,
color = targcol, group = targcol,
label = c("condition green",
"condition mixed",
"condition mixed",
"condition white"))) +
scale_x_discrete("Single or Mixed", breaks = 0:1,
labels = c("Single","Mixed")) +
geom_point(stat = "identity") + theme_minimal() + geom_line() +
scale_y_continuous(position = "right") +
geom_errorbar(width = .25, aes(ymin=corr-ci, ymax=corr+ci)) +
geom_label_repel(stat = "identity", nudge_y = -.02, segment.alpha = .01) +
coord_cartesian(ylim = c(.9, 1)) +
scale_color_manual(values=myColors) + ylab("Percent Correct (%)") +
ggtitle("Accuracy of the \n Visual Search Task \n by Condition") +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = .5))
accplot
datac
acc.mean <- cleanac %>%
group_by(condition, targcol) %>%
summarise(perc_corr = mean(corr)*100, n=n())
acc.mean]
acc.mean
View(cleanac)
aov(data = acc.mean, formula = perc_corr ~ condition * targcol)
myColors <- c("forestgreen","grey50")
names(myColors) <- levels(clean$targcol)
colScale <- scale_colour_manual(name = "targcol",values = myColors)
acc.mean <- cleanac %>%
group_by(condition, targcol) %>%
summarise(perc_corr = mean(corr)*100)
datac <- summarySEwithin(cleanac, measurevar ="corr", withinvars = c("condition","targcol"), idvar = "subid")
accplot <- ggplot(datac, aes(x = condition, y=corr, color = targcol, group = targcol)) +
geom_point() + theme_minimal() + geom_point() +
my.axis.font + geom_errorbar(width = .25,
aes(ymin=corr-ci, ymax=corr+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(.95, 1.1)) +
scale_fill_manual(values=myColors) + ylab("Percent Correct (%)") +
ggtitle("Accuracy of the \n Visual Search Task \n by Condition")
accplot
vis.ac <- lmer(corr~condition*targcol+(1|subid),data=cleanac)
Anova(vis.ac)
acc.mean <- cleanac %>%
group_by(condition, targcol) %>%
summarise(perc_corr = mean(corr)*100)
acc.mean
datac <- summarySEwithin(cleanac, measurevar ="corr", withinvars = c("condition","targcol"), idvar = "subid")
datac
datrt <- summarySEwithin(clean, measurevar ="rt1", withinvars = c("condition","targcol"), idvar = "subid")
rtplot <- ggplot(datrt, aes(x = condition, y=rt1, fill = targcol)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt1-ci, ymax=rt1+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(1000, 3000)) +
scale_fill_manual(values=myColors) + ylab("Reaction Time (ms)") +
ggtitle("Reaction Times of the \n Visual Search Task \n by Condition")
rtplot
vis.ac <- lmer(rt1~condition*targcol*corr+(1|subid),data=clean)
Anova(vis.ac)
datrt <- summarySEwithin(clean, measurevar ="rt1", withinvars = c("condition","targcol"), idvar = "subid")
rtplot <- ggplot(datrt, aes(x = condition, y=rt1, fill = targcol)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt1-ci, ymax=rt1+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(1000, 3000)) +
scale_fill_manual(values=myColors) + ylab("Reaction Time (ms)") +
ggtitle("Reaction Times of the \n Visual Search Task \n by Condition")
rtplot
vis.ac <- lmer(rt1~condition*targcol*corr+(1|subid),data=clean)
Anova(vis.ac)
drtrt <- summarySEwithin(drt.clean, measurevar ="mean.dev", withinvars = c("condition"), idvar = "subid")
drtrt <- drtrt %>% filter(condition != "practice")
rtplot <- ggplot(drtrt, aes(x = condition, y=mean.dev)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=mean.dev-ci, ymax=mean.dev+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(0, 10)) + ylab("Degrees Deviation") +
ggtitle("Mean Steering Deviation")
rtplot
drt.rt <- lmer(mean.dev~condition+(1|subid),data=drt.clean)
Anova(drt.rt)
Anova(drt.rt)
drtrt <- summarySEwithin(drt.clean, measurevar ="mean.dev", withinvars = c("condition"), idvar = "subid")
drtrt <- drtrt %>% filter(condition != "practice")
drtrt
drt.rt <- lmer(mean.dev~condition+(1|subid),data=drt.clean)
Anova(drt.rt)
drt.clean$condition <- recode_factor(drt.clean$condition,
"1" = "practice","2" = "green","3" ="white", "4" = "mixed",
.default = "NA")
drt.clean$response <- recode_factor(drt.clean$response, "1" = "correct", "-1" = "incorrect")
drtrt <- summarySEwithin(drt.clean, measurevar ="rt", withinvars = c("condition","response"), idvar = "subid")
drtrt <- drtrt %>% filter(condition != "practice")
rtplot <- ggplot(drtrt, aes(x = condition, y=rt, fill = response)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt-ci, ymax=rt+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(200, 700)) + ylab("Reaction Time (ms)") +
ggtitle("Reaction Times of the \n DRT \n by Condition and Response")
rtplot
drt.rt <- lmer(rt~condition*response*mean.dev+(1|subid),data=drt.clean)
Anova(drt.rt)
drtrt
rm(list=ls()) #Clear wd()
source("Load_Data.R") #Load the functions
load("~/Documents/R_data/MitchHonors/MitchChoice/cleanchoiceData.Rdata")
drt.clean.choice <- drt.clean.choice %>%
dplyr::filter(subid != "03")
myColors <- c("forestgreen","grey50")
colScale <- scale_colour_manual(name = "targcol",values = myColors)
acc.mean <- clean.choiceac %>%
group_by(condition, targcol) %>%
summarise(perc_corr = mean(corr)*100)
accplot <- ggplot(datac, aes(x = condition, y=corr, fill = targcol)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=corr-ci, ymax=corr+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(.9, 1)) +
scale_fill_manual(values=myColors) + ylab("Percent Correct (%)") +
ggtitle("Accuracy of the \n Visual Search Task \n by Condition")
acc.mean <- clean.choiceac %>%
group_by(condition, targcol) %>%
summarise(perc_corr = mean(corr)*100)
datac <- summarySEwithin(clean.choiceac, measurevar ="corr", withinvars = c("condition","targcol"), idvar = "subid")
datac
datrt <- summarySEwithin(clean.choice, measurevar ="rt1", withinvars = c("condition","targcol"), idvar = "subid")
datrt
drt.ac$condition <- recode_factor(drt.ac$condition,"1" = "practice","2" = "green","3" ="white", "4" = "mixed", .default = "NA")
drt.meanhit <- drt.ac %>%
filter(response != -1) %>%
dplyr::group_by(subid,condition) %>%
dplyr::summarise(mean_ac_hits = mean(response)*100) %>%
filter(condition != "practice", subid != "03", mean_ac_hits > 50)
drthit <- summarySEwithin(drt.meanhit, measurevar ="mean_ac_hits", withinvars = c("condition"), idvar = "subid")
drthit
drt.hit <- lmer(mean_ac_hits~condition+(1|subid),data=drt.meanhit)
Anova(drt.hit)
drt.clean.choice$condition <- recode_factor(drt.clean.choice$condition,"1" = "practice","2" = "green","3" ="white", "4" = "mixed", .default = "NA")
drt.clean.choice$response <- recode_factor(drt.clean.choice$response, "1" = "correct", "-1" = "incorrect", "0" = "miss")
drtrt <- summarySEwithin(drt.clean.choice, measurevar ="rt", withinvars = c("condition","response"), idvar = "subid")
drtrt <- drtrt %>% filter(condition != "practice", response != "miss")
rtplot <- ggplot(drtrt, aes(x = condition, y=rt, fill = response)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=rt-ci, ymax=rt+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(600, 750)) + ylab("Reaction Time (ms)") +
ggtitle("Reaction Times of the \n DRT \n by Condition and Response")
rtplot
drt.rt <- lmer(rt~condition*response*mean.dev+(1|subid),data=drt.clean.choice)
Anova(drt.rt)
drtrt
drtrt <- summarySEwithin(drt.clean.choice, measurevar ="mean.dev", withinvars = c("condition"), idvar = "subid")
drtrt <- drtrt %>% filter(condition != "practice")
rtplot <- ggplot(drtrt, aes(x = condition, y=mean.dev)) +
geom_bar(stat = "identity", position = "dodge") + theme_minimal() +
my.axis.font + geom_errorbar(position=position_dodge(.9), width = .25,
aes(ymin=mean.dev-ci, ymax=mean.dev+ci)) +
xlab("Condition") + coord_cartesian(ylim = c(5, 20)) + ylab("Degrees Deviation") +
ggtitle("Mean Steering Deviation")
rtplot
drt.rt <- lmer(mean.dev~condition+(1|subid),data=drt.clean.choice)
Anova(drt.rt)
drtrt
